{"version":3,"sources":["webpack:///webpack/bootstrap 7779b3ff1f1200d97af9","webpack:///./src/main.ts","webpack:///./src/algorithms/permuteString.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7779b3ff1f1200d97af9","import { permuteString} from \"./algorithms/permuteString\";\n\npermuteString(\"bruno\");\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","//Design an algorithm to print all permutations of a string. For simplicity, assume all characters are unique.\n\nlet mergeCounter = 0;\n\nexport function permuteString(source: string) {\n    if(!source) {\n        throw \"provide a valid non-empty string please\";\n    }\n\n    if (source.length == 1) {\n        console.log(source);\n    }\n\n    let subArray = source.split('');\n    let newCharacter = subArray.pop();\n    console.log(\"end merge\", merge(newCharacter!, subArray.join('')));\n}\n\nexport function merge(character: string, source: string): string[] {\n    mergeCounter++;\n\n    if (mergeCounter == 5) {\n        throw \"stop: mergeCounter\";\n    }\n\n    console.log(\"start merge\", mergeCounter, character, source);\n    let sourceArray: string[] = source.split('');\n\n    let combinations: string[];\n    if (sourceArray.length > 1) {\n        let newCharacter = sourceArray.pop();\n        \n        let subsetArray = sourceArray.join('');\n        combinations = merge(newCharacter!, subsetArray);\n    }\n    else {\n        console.log(\"stop digging\", sourceArray);\n        combinations = sourceArray;\n    }\n    \n    let result: string[] = [];\n\n    console.log(\"combinations\", character, combinations);\n\n    if (character == \"r\") {\n        for(let combination of combinations) {\n            console.log(\"start working with combination\", combination);\n            let combinationArray = combination.split('');\n            console.log(\"combinationArray\", combinationArray);\n\n            for(let combinationArrayIndex = 0; combinationArrayIndex < combinationArray.length; combinationArrayIndex++) {\n                let copy = combinationArray.join().split('');\n                copy.splice(combinationArrayIndex, 0, character!);\n                let copyText = copy.join('');\n                console.log(\"push\", copyText);\n                result.push(copyText);\n            }\n        }\n    }\n\n    return result;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/algorithms/permuteString.ts"],"sourceRoot":""}