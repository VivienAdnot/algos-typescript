{"version":3,"sources":["webpack:///webpack/bootstrap 83998afd31176045128d","webpack:///./src/main.ts","webpack:///./src/algorithms/search/maze/test.ts","webpack:///./src/algorithms/search/maze/maze.ts","webpack:///./src/algorithms/search/maze/search.ts","webpack:///./src/algorithms/search/maze/structures.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 83998afd31176045128d","import { test_mazeSearch } from \"./algorithms/search/maze/test\";\n\ntest_mazeSearch();\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Maze } from \"./maze\";\nimport { MazeSearch } from './search';\n\nexport function test_mazeSearch() {\n    let maze = new Maze([\n        ['v', '?', '|', ' ', '<'],\n        ['?', ' ', ' ', '?', ' '],\n        ['?', ' ', '?', ' ', '|'],\n        ['?', ' ', ' ', '-', ' '],\n        ['>', ' ', '^', '?', '<']\n    ]);\n\n    let searcher = new MazeSearch(maze);\n    console.log(searcher.countExits());\n}\n\n\n// WEBPACK FOOTER //\n// ./src/algorithms/search/maze/test.ts","import { Position } from './structures';\n\nexport class Maze {\n    private layout: string[][];\n\n    constructor(layout: string[][]) {\n        this.layout = layout;\n    }\n\n    getToken(position: Position): string {\n        return this.layout[position.row][position.column];\n    }\n\n    getLimits() {\n        return {\n            rows: this.layout.length,\n            columns: this.layout[0].length\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/algorithms/search/maze/maze.ts","import { Maze } from './maze';\nimport { Position, Direction, charDirections, reverseDirection } from './structures';\n\nexport class MazeSearch {\n    private exitPositions: string[] = [];\n\n    constructor(private maze: Maze) {\n\n    }\n\n    countExits(): string[] {\n        let currentPosition = {row: 0, column: 0};\n        let currentToken = this.maze.getToken(currentPosition);\n        let nextDirections = charDirections.get(currentToken);\n\n        this.next(currentPosition, nextDirections![0], []);\n        return this.exitPositions;\n    }\n    \n    private next(currentPosition: Position, directionSource: Direction, path: Position[]) {\n        path.push(currentPosition);\n        let currentToken = this.maze.getToken(currentPosition);\n        \n        let nextDirections = charDirections.get(currentToken);\n\n        for (let direction of nextDirections!) {\n            if (direction == \"CONTINUE\") {\n                direction = directionSource;\n            } else if (direction == reverseDirection.get(directionSource)) {\n                continue;\n            }\n\n            let nextPosition = this.move(currentPosition, direction);\n\n            if (this.isCollision(nextPosition, path)) {\n                continue;\n            }\n            \n            if(this.isExit(nextPosition)) {\n                this.addExit(currentPosition, currentToken);\n                continue;\n            }\n\n            this.next(Object.assign({}, nextPosition), direction, path.slice());\n        }\n    }\n\n    private move(currentPosition: Position, direction: Direction): Position {\n        switch(direction) {\n            case \"UP\":\n                return {\n                    row: currentPosition.row - 1,\n                    column: currentPosition.column\n                }\n            case \"DOWN\":\n                return {\n                    row: currentPosition.row + 1,\n                    column: currentPosition.column\n                }\n            case \"LEFT\":\n                return {\n                    row: currentPosition.row,\n                    column: currentPosition.column - 1\n                }\n            case \"RIGHT\":\n                return {\n                    row: currentPosition.row,\n                    column: currentPosition.column + 1\n                }\n        }\n\n        return currentPosition;\n    }\n\n    private isExit(position: Position) {\n        let limits = this.maze.getLimits();\n        if (position.column < 0 || position.column >= limits.columns) return true;\n        if (position.row < 0 || position.row >= limits.rows) return true;\n        return false;\n    }\n\n    private isCollision(position: Position, path: Position[]) {\n        return path.some(p => p.row == position.row && p.column == position.column);\n    }\n\n    private addExit(position: Position, currentToken: string) {\n        let key = position.row + \"-\" + position.column;\n\n        if (this.exitPositions.indexOf(key) == -1) {\n            this.exitPositions.push(key);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/algorithms/search/maze/search.ts","export type Direction = \"UP\" | \"RIGHT\" | \"DOWN\" | \"LEFT\" | \"CONTINUE\";\n\nexport interface Position {\n    row: number;\n    column: number;\n}\n\nexport interface Border {\n    outDirection: Direction;\n}\n\nexport let charDirections = new Map<string, Direction[]>();\ncharDirections.set('^', [\"UP\"]);\ncharDirections.set('>', [\"RIGHT\"]);\ncharDirections.set('<', [\"LEFT\"]);\ncharDirections.set('v', [\"DOWN\"]);\ncharDirections.set('|', [\"UP\", \"DOWN\"]);\ncharDirections.set('-', [\"LEFT\", \"RIGHT\"]);\ncharDirections.set('?', [\"UP\", \"RIGHT\", \"DOWN\", \"LEFT\"]);\ncharDirections.set(' ', [\"CONTINUE\"]);\n\nexport let reverseDirection = new Map<Direction, Direction>();\nreverseDirection.set(\"UP\", \"DOWN\");\nreverseDirection.set(\"DOWN\", \"UP\");\nreverseDirection.set(\"RIGHT\", \"LEFT\");\nreverseDirection.set(\"LEFT\", \"RIGHT\");\n\n\n// WEBPACK FOOTER //\n// ./src/algorithms/search/maze/structures.ts"],"sourceRoot":""}