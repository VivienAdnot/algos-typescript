{"version":3,"sources":["webpack:///webpack/bootstrap b62ac1ac3a99a8697729","webpack:///./src/main.ts","webpack:///./src/algorithms/string/areAnagrams.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,4CAAmE;AAEnE,+BAAgB,EAAE,CAAC;;;;;;;;;ACFnB,sBAA4B,IAAY,EAAE,IAAY;KAClD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;SAAC,MAAM,CAAC,KAAK,CAAC;KAE7C,IAAI,gBAAgB,GAAG,CAAC,CAAC;KACzB,IAAI,OAAO,GAAa,EAAE,CAAC,CAAC,6BAA6B;KAEzD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;SACnC,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAClC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACrB,gBAAgB,EAAE,CAAC;aACnB,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAC1B,CAAC;SACD,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;KACxB,CAAC;KAED,IAAI,mBAAmB,GAAG,CAAC,CAAC;KAE5B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;SACnC,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAElC,oDAAoD;SACpD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC/C,MAAM,CAAC,KAAK,CAAC;SACjB,CAAC;SAED,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;SAEpB,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACzB,mBAAmB,EAAE,CAAC;aAEtB,EAAE,CAAC,CAAC,mBAAmB,IAAI,gBAAgB,CAAC,CAAC,CAAC;iBAC1C,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAClC,CAAC;SACL,CAAC;KACL,CAAC;KAED,MAAM,CAAC,KAAK,CAAC;AACjB,EAAC;AArCD,mCAqCC;AAED;KACI,IAAI,KAAK,GAAG;SACR,EAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAC,OAAO,EAAC;SACxB,EAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAC,QAAQ,EAAC;SACzB,EAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAC,QAAQ,EAAC;SACzB,EAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAC,OAAO,EAAC;SACvB,EAAC,CAAC,EAAE,UAAU,EAAE,CAAC,EAAC,UAAU,EAAC;SAC7B,EAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAC,MAAM,EAAC;MACvB,CAAC;KAEF,GAAG,CAAC,CAAa,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;SAAjB,IAAI,IAAI;SACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5D;AACL,EAAC;AAbD,6CAaC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b62ac1ac3a99a8697729","import { test_areAnagrams } from \"./algorithms/string/areAnagrams\";\n\ntest_areAnagrams();\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","export function areAnagrams(str1: string, str2: string) {\n    if (str1.length != str2.length) return false;\n\n    let uniqueCharacters = 0;\n    let letters: number[] = []; //ascii table, 256 max length\n\n    for (let i = 0; i < str1.length; i++) {\n        let charCode = str1.charCodeAt(i);\n        if (!letters[charCode]) {\n            uniqueCharacters++;\n            letters[charCode] = 0;\n        }\n        letters[charCode]++;\n    }\n\n    let charactersCompleted = 0;\n\n    for (let i = 0; i < str2.length; i++) {\n        let charCode = str1.charCodeAt(i);\n        \n        // found more of this character in str2 than in str1\n        if (!letters[charCode] || letters[charCode] == 0) {\n            return false;\n        }\n\n        letters[charCode]--;\n\n        if (letters[charCode] == 0) {\n            charactersCompleted++;\n\n            if (charactersCompleted == uniqueCharacters) {\n                return i == (str2.length - 1);\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function test_areAnagrams() {\n    let tests = [\n        {a: \"vivien\", b:\"bruno\"},\n        {a: \"vivien\", b:\"vienvi\"},\n        {a: \"vivien\", b:\"nevivi\"},\n        {a: \"bruno\", b:\"bourn\"},\n        {a: \"zanzibar\", b:\"zibarzan\"},\n        {a: \"bob\", b:\"obbo\"}\n    ];\n\n    for (let test of tests) {\n        console.log(test.a, test.b, areAnagrams(test.a, test.b));\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/algorithms/string/areAnagrams.ts"],"sourceRoot":""}